@using Wattmate_Site.DataModels.DataTransferModels
@model Wattmate_Site.Controllers.ViewModels.MainViewModel

<body class="bg-light">

    

    <!-- Main Content -->
    <div class="container mt-4">
        <div class="row g-4">
            <!-- Device Card -->
            @foreach(DeviceModelDTO device in Model.Devices)
            {
                <div class="col-12">
                    <div class="border p-4 bg-white rounded shadow-sm">
                        <h5>@device.DeviceName</h5>
                        <p class="text-muted">Device ID: @device.DeviceId</p>
                        <div class="d-flex gap-2">
                            <button class="btn btn-sm btn-primary">Edit</button>
                            <button onclick="goTelemetry('@device.DeviceId')" class="btn btn-sm btn-secondary">Telemetry</button>
                            <button onclick="goTelemetryExtra('@device.DeviceId')" class="btn btn-sm btn-danger">Extra</button>
                            @if (device.Online)
                            {
                                <button class="btn btn-sm btn-success">Online</button>
                            }
                            else
                            {
                                <button class="btn btn-sm btn-danger">Offline</button>
                            }
                            @{
                                var color = device.Status == "Active" ? "green" : "red";
                                string oppositeStatus = device.Status == "Active" ? "Closed" : "Active";
                            }
                            <svg style="margin-left: 30px; margin-top: 4px;" width="20px" height="20px" fill="@color" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"> <path d="M349.4 44.6c5.9-13.7 1.5-29.7-10.6-38.5s-28.6-8-39.9 1.8l-256 224c-10 8.8-13.6 22.9-8.9 35.3S50.7 288 64 288l111.5 0L98.6 467.4c-5.9 13.7-1.5 29.7 10.6 38.5s28.6 8 39.9-1.8l256-224c10-8.8 13.6-22.9 8.9-35.3s-16.6-20.7-30-20.7l-111.5 0L349.4 44.6z" /></svg>
                            @if(device.Status == "Active")
                            {
                                <button onclick="switchDeviceStatus('@device.DeviceId', 'Closed')" class="btn btn-sm btn-danger">Turn off</button>
                            }
                            else
                            {
                                <button onclick="switchDeviceStatus('@device.DeviceId', 'Active')" class="btn btn-sm btn-success">Turn on</button>
                            }
                        </div>
                    </div>
                </div>
            }
            
         
           

            <!-- Add more devices as needed -->
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

</body>

<script>
   


    function goTelemetry(deviceId) {
        window.location.href = "/Telemetry?DeviceId=" + deviceId;
    }

    function goTelemetryExtra(deviceId){
        window.location.href = "/TelemetryExtra?DeviceId=" + deviceId;
    }



    async function switchDeviceStatus(deviceId, status) {
        var body = { DeviceId: deviceId, Status: status }

        // send data
        const response = await fetch('/Device/RequestChangeDeviceStatus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(body)
        });

        if (response.status == 200) {
           
        }
        else {
           
        }

        location.reload();
    }
</script>