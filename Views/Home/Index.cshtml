@using Wattmate_Site.DataModels
@model Wattmate_Site.Controllers.ViewModels.MainViewModel

<body class="bg-light">

    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary px-3">
        <a class="navbar-brand" href="#">Wattmate</a>
        <div class="collapse navbar-collapse">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <button class="btn btn-outline-light me-2">Usage</button>
                </li>
                <li class="nav-item">
                    <button class="btn btn-outline-light">History</button>
                </li>
            </ul>
            <span class="navbar-text text-white">
                @Model.UserData.FullName<br><small>@Model.UserData.UserEmail</small>
            </span>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container mt-4">
        <div class="row g-4">
            <!-- Device Card -->
            @foreach(DeviceModel device in Model.Devices)
            {
                <div class="col-12">
                    <div class="border p-4 bg-white rounded shadow-sm">
                        <h5>@device.DeviceName</h5>
                        <p class="text-muted">Device ID: @device.DeviceId</p>
                        <div class="d-flex gap-2">
                            <button class="btn btn-sm btn-primary">Edit</button>
                            <button class="btn btn-sm btn-secondary">View History</button>
                            <button class="btn btn-sm btn-danger">Remove</button>
                            @if (device.Online)
                            {
                                <button class="btn btn-sm btn-success">Online</button>
                            }
                            else
                            {
                                <button class="btn btn-sm btn-danger">Offline</button>
                            }
                            @{
                                var color = device.Status == "Active" ? "green" : "red";
                                string oppositeStatus = device.Status == "Active" ? "Closed" : "Active";
                            }
                            <svg style="margin-left: 30px; margin-top: 4px;" width="20px" height="20px" fill="@color" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"> <path d="M349.4 44.6c5.9-13.7 1.5-29.7-10.6-38.5s-28.6-8-39.9 1.8l-256 224c-10 8.8-13.6 22.9-8.9 35.3S50.7 288 64 288l111.5 0L98.6 467.4c-5.9 13.7-1.5 29.7 10.6 38.5s28.6 8 39.9-1.8l256-224c10-8.8 13.6-22.9 8.9-35.3s-16.6-20.7-30-20.7l-111.5 0L349.4 44.6z" /></svg>
                            @if(device.Status == "Active")
                            {
                                <button onclick="switchDeviceStatus('@device.DeviceId', 'Closed')" class="btn btn-sm btn-danger">Turn off</button>
                            }
                            else
                            {
                                <button onclick="switchDeviceStatus('@device.DeviceId', 'Active')" class="btn btn-sm btn-success">Turn on</button>
                            }
                        </div>
                    </div>
                </div>
            }
            
            <div style="height: 300px;">
                <canvas id="myChart"></canvas>
            </div>
           

            <!-- Add more devices as needed -->
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

<script>
    const ctx = document.getElementById('myChart');

    const labels = ['1', '2', '3', '4', '5', '6', '7']
    const data = {
        labels: labels,
        datasets: [{
            label: 'My First Dataset',
            data: [65, 59, 80, 81, 56, 55, 40],
            fill: false,
            borderColor: 'rgb(75, 192, 192)',
            tension: 0.1
        }]
    };

    let myBarChart = new Chart(ctx, {
        type: 'line',
        data: data,
        options: {
            responsive: true,
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Maj',
                        font: {
                            padding: 4,
                            size: 20,
                            weight: 'bold',
                            family: 'Arial'
                        },
                        color: 'darkblue'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Values',
                        font: {
                            size: 20,
                            weight: 'bold',
                            family: 'Arial'
                        },
                        color: 'darkblue'
                    },
                    beginAtZero: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'Values',
                    }
                }
            }
        }
    });


    // new Chart(ctx, {
    //     type: 'bar',
    //     data: {
    //         labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
    //         datasets: [{
    //             label: '# of Votes',
    //             data: [12, 19, 3, 5, 2, 3],
    //             borderWidth: 1
    //         }]
    //     },
    //     options: {
    //         scales: {
    //             y: {
    //                 beginAtZero: true
    //             }
    //         }
    //     }
    // });




    async function switchDeviceStatus(deviceId, status) {
        var body = { DeviceId: deviceId, Status: status }

        // send data
        const response = await fetch('/Device/RequestChangeDeviceStatus', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(body)
        });

        if (response.status == 200) {
           
        }
        else {
           
        }

        location.reload();
    }
</script>